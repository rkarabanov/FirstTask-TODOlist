{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport * as userDB from './utils/UserDBUtils';\r\nimport * as forgotPassDB from './utils/ForgotPassDBUtils';\r\nimport * as valid from '../client_my/validation/Validation';\r\nlet session = require('express-session');\r\n\r\nconst morgan = require('morgan');\r\n\r\nconst jwt = require('jsonwebtoken'); // used to create, sign, and verify tokens\r\n\r\nconst app = express();\r\n\r\nconst nodemailer = require('nodemailer');\r\n\r\nconst transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n        user: '5600t0@gmail.com',\r\n        pass: '3455961536263Rk'\r\n    }\r\n});\r\n\r\nuserDB.setUpConnection();\r\n\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.use(cors({origin: \"*\"}));\r\n\r\napp.use(morgan('dev'));\r\n\r\n// app.set('superSecret', {\r\n//     \"typ\": \"JWT\",\r\n//     \"alg\": \"HS256\"\r\n// });\r\n//\r\n// app.get('/login', (req, res) => {\r\n//\r\n//     res.send(200);\r\n// });\r\n\r\n\r\nfunction getToken(data) {\r\n    return jwt.sign(data, 'superSecret', {\r\n        expiresIn: 60 * 60 * 24\r\n    });\r\n}\r\n\r\napp.post(\"/checkJwt\", function (req, res) {\r\n    let token = req.body.token;\r\n    // console.log(token);\r\n    if (token.length > 0) {\r\n        jwt.verify(token, 'superSecret', function (err, decoded) {\r\n            if (err) {\r\n                console.log(err);\r\n                return res.send({success: false});\r\n            } else {\r\n                console.log(decoded._doc);\r\n                userDB.find(decoded._doc).then(data => {\r\n                    if (data.length == 0) {\r\n                        return res.send({success: false});\r\n                    }\r\n                    else {\r\n                        let token = getToken(data[0]);\r\n                        console.log({success: true, user: data[0], token:token});\r\n                        return res.send({success: true, user: data[0], token:token});\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }else {\r\n        return res.send({success: false});\r\n    }\r\n});\r\n\r\napp.post('/sendInsructions', function (req, res) {\r\n    userDB.findByEmail(req.body).then((data) => {\r\n        if (data.length == 0) {\r\n            res.send(false);\r\n        } else {\r\n            forgotPassDB.removeByEmail(req.body).then(() => {\r\n                forgotPassDB.createForgotPass(req.body).then((data) => {\r\n                        console.log(data);\r\n                        let id = data._id;\r\n                        let mailOptions = {\r\n                            from: '\"R-key\" <5600t0@gmail.com>', // sender address\r\n                            to: '' + req.body.email, // list of receivers\r\n                            subject: 'Hello ✔', // Subject line\r\n                            text: 'Hello world ?', // plain text body\r\n                            html: '<div><div><b>Если вы хотите изметь ваш пароль, то пройдите по ссылке внизу</b></div>' +\r\n                            '<div><a href=\"http://localhost:8090/restorePass?id=' +\r\n                            id +\r\n                            '\">Ссылка</a></div></div> ' // html body\r\n                        };\r\n\r\n// send mail with defined transport object\r\n                        transporter.sendMail(mailOptions, (error, info) => {\r\n                            if (error) {\r\n\r\n                                res.send(false);\r\n                                return console.log(error);\r\n                            }\r\n                            console.log('Message %s sent: %s', info.messageId, info.response);\r\n                            res.send(true);\r\n\r\n                        });\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    })\r\n\r\n});\r\n\r\napp.post('/reg',(req,res)=>{\r\n    console.log(req.body);\r\n    userDB.findByEmail(req.body).then(data=>{\r\n        if(data.length == 0)\r\n        userDB.createUser(req.body).then(data=>{\r\n            console.log(data);\r\n            let token = getToken(data);\r\n            res.send({user:data, token:token});\r\n        });\r\n        else res.send(\"Данный email уже зарегестрирован\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\napp.post('/login', (req, res) => {\r\n    userDB.findByEmailAndPass(req.body).then((data) => {\r\n        if (data.length != 0) {\r\n            // console.log(req.body);\r\n            console.log(data[0]);\r\n            let token = getToken(data[0]);\r\n            console.log({token: token, user: data[0]});\r\n            res.send({token: token, user: data[0]});\r\n        }\r\n        else {\r\n            console.log(req.body);\r\n            res.send(\"Ошибка ввода: Неверный email/пароль\");\r\n        }\r\n    });\r\n\r\n});\r\n\r\napp.get('/dashboard', (req, res) => {\r\n    res.send();\r\n});\r\n\r\napp.get('/restorePass', (req, res) => {\r\n    console.log(req.query.id);\r\n    function date_diff_indays(date1) {\r\n        let dt1 = new Date(date1);\r\n        let dt2 = new Date();\r\n        return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate()) ) / (1000 * 60 * 60 * 24));\r\n    };\r\n\r\n    forgotPassDB.findById(req.query.id).then((data) => {\r\n        console.log(data);\r\n        if (data.length == 0 || date_diff_indays(data[0].date) > 2) {\r\n            res.send(false);\r\n        }\r\n        res.send(true);\r\n    }).catch((error) => {\r\n        res.send(false);\r\n    });\r\n});\r\n\r\napp.post('/restorePass', (req, res) => {\r\n    let email;\r\n    forgotPassDB.findById(req.query.id).then((data) => {\r\n        email = data[0].email;\r\n        console.log(data);\r\n        console.log(email);\r\n        userDB.findByEmail({email: email}).then(data => {\r\n            console.log(data[0]);\r\n            console.log(req.body);\r\n            userDB.restorePass(data[0], req.body.pass).then(date => {\r\n                forgotPassDB.removeByEmail({email: email}).then(date => {\r\n                    res.send(true);\r\n                })\r\n            })\r\n        })\r\n    }).catch((error) => {\r\n            res.send(false);\r\n        }\r\n    );\r\n\r\n});\r\n\r\n\r\nconst server = app.listen(8080, () => {\r\n    console.log(`Server is up and running on port 8080`);\r\n});"]}