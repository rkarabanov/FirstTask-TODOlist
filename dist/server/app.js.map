{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\n\r\nimport * as userDB from './utils/UserDBUtils';\r\nimport * as forgotPassDB from './utils/ForgotPassDBUtils';\r\nimport * as noteDB from './utils/NoteDBUtils';\r\nimport xlsx from 'node-xlsx';\r\nlet session = require('express-session');\r\nconst nodeExcel = require('excel-export');\r\n\r\nconst morgan = require('morgan');\r\n\r\nconst jwt = require('jsonwebtoken'); // used to create, sign, and verify tokens\r\n\r\nconst app = express();\r\n\r\nconst nodemailer = require('nodemailer');\r\n\r\nconst transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n        user: '5600t0@gmail.com',\r\n        pass: '3455961536263Rk'\r\n    }\r\n});\r\n\r\nuserDB.setUpConnection();\r\n\r\n\r\napp.use(bodyParser.json({limit: '5mb'}));\r\napp.use(cors({origin: \"*\"}));\r\n\r\napp.use(morgan('dev'));\r\n\r\n// app.set('superSecret', {\r\n//     \"typ\": \"JWT\",\r\n//     \"alg\": \"HS256\"\r\n// });\r\n//\r\n// app.get('/login', (req, res) => {\r\n//\r\n//     res.send(200);\r\n// });\r\n\r\n\r\nfunction getToken(data) {\r\n    console.log(data.email);\r\n    return jwt.sign({email: data.email, _id: data._id, role: data.role}, 'superSecret', {\r\n        expiresIn: 60 * 60 * 24\r\n    });\r\n}\r\n\r\napp.post(\"/checkJwt\", function (req, res) {\r\n    let token = req.body.token;\r\n    console.log(req.body.token);\r\n    if (token.length > 0) {\r\n        jwt.verify(token, 'superSecret', function (err, decoded) {\r\n            if (err) {\r\n                console.log(err);\r\n                return res.send({success: false});\r\n            } else {\r\n                console.log(\"lol\");\r\n                console.log(decoded);\r\n                userDB.find({email: decoded.email, _id: decoded._id, role: decoded.role}).then(data => {\r\n                    if (data.length == 0) {\r\n                        return res.send({success: false});\r\n                    }\r\n                    else {\r\n                        // console.log(data);\r\n                        let token = getToken(data[0]);\r\n                        // console.log({success: true, user: data[0], token: token});\r\n                        return res.send({success: true, user: data[0], token: token});\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        return res.send({success: false});\r\n    }\r\n});\r\n\r\napp.post('/addTask', (req, res) => {\r\n    console.log(req.body);\r\n    let userinfo={pass:req.body.pass, _id:req.body.userID};\r\n    userDB.findByIDAndPass(userinfo).then(data => {\r\n        if (data.length != 0)\r\n            noteDB.createNote(req.body).then(data => {\r\n                noteDB.findByUserID(req.body).then(data => {\r\n                console.log(data);\r\n                res.send( data);}\r\n            );\r\n            });\r\n        else res.send(\"Неверный данные пользователя\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\napp.post('/getTasks', (req, res) => {\r\n    console.log('/getTasks');\r\n    console.log(req.body);\r\n    userDB.findByIDAndPass(req.body).then(data => {\r\n        if (data.length != 0)\r\n            noteDB.findByUserID({userID:data[0]._id}).then(data => {\r\n                    console.log(data);\r\n                    res.send( data);\r\n            });\r\n        else res.send(\"Неверный данные пользователя\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\napp.post('/getTasks', (req, res) => {\r\n    // console.log('/getTasks');\r\n    console.log(req.body);\r\n    userDB.findByIDAndPass(req.body).then(data => {\r\n        if (data.length != 0)\r\n            noteDB.findByUserID({userID:data[0]._id}).then(data => {\r\n                console.log(data);\r\n                res.send( data);\r\n            });\r\n        else res.send(\"Неверный данные пользователя\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\n// app.get('/xml', function(req, res){\r\n//     // let conf ={};\r\n//     // // conf.stylesXmlFile = \"styles.xml\";\r\n//     // // conf.name = \"mysheet\";\r\n//     // conf.cols = [{\r\n//     //     caption:'string',\r\n//     //     type:'string',\r\n//     //     beforeCellWrite:function(row, cellData){\r\n//     //         return cellData.toUpperCase();\r\n//     //     },\r\n//     //     width:28.7109375\r\n//     // },{\r\n//     //     caption:'date',\r\n//     //     type:'date',\r\n//     //     beforeCellWrite:function(){\r\n//     //         let originDate = new Date(Date.UTC(1899,11,30));\r\n//     //         return function(row, cellData, eOpt){\r\n//     //             if (eOpt.rowNum%2){\r\n//     //                 eOpt.styleIndex = 1;\r\n//     //             }\r\n//     //             else{\r\n//     //                 eOpt.styleIndex = 2;\r\n//     //             }\r\n//     //             if (cellData === null){\r\n//     //                 eOpt.cellType = 'string';\r\n//     //                 return 'N/A';\r\n//     //             } else\r\n//     //                 return (cellData - originDate) / (24 * 60 * 60 * 1000);\r\n//     //         }\r\n//     //     }()\r\n//     // },{\r\n//     //     caption:'bool',\r\n//     //     type:'bool'\r\n//     // },{\r\n//     //     caption:'number',\r\n//     //     type:'number'\r\n//     // }];\r\n//     // conf.rows = [\r\n//     //     ['pi', new Date(Date.UTC(2013, 4, 1)), true, 3.14],\r\n//     //     [\"e\", new Date(2012, 4, 1), false, 2.7182],\r\n//     //     [\"M&M<>'\", new Date(Date.UTC(2013, 6, 9)), false, 1.61803],\r\n//     //     [\"null date\", null, true, 1.414]\r\n//     // ];\r\n//     // let result = nodeExcel.execute(conf);\r\n//     // res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\r\n//     // res.setHeader(\"Content-Disposition\", \"attachment; filename=\" + \"Report.xlsx\");\r\n//     // res.end(result, 'binary');\r\n//\r\n//\r\n//     const data = [[1, 2, 3], [true, false, null, 'sheetjs'], ['foo', 'bar', new Date('2014-02-19T14:30Z'), '0.3'], ['baz', null, 'qux']];\r\n//     let buffer = xlsx.build([{name: \"mySheetName\", data: data}]); // Returns a buffer\r\n//     res.end(buffer.toString('base64'));\r\n// });\r\n\r\napp.post('/getXlsx', function(req, res){\r\n    console.log(req.body);\r\n    userDB.findByIDAndPass(req.body).then(data => {\r\n        if (data.length != 0)\r\n            noteDB.findByUserID({userID:data[0]._id}).then(data => {\r\n                // console.log(data);\r\n                let headers= [\"Tasks\", \"Is finish\"];\r\n                let arr=[];\r\n                arr.push(headers);\r\n                data.map(e=>{\r\n                    let a=[];\r\n                    a.push(e.task);\r\n                    a.push(e.status?\"Yes\":\"No\");\r\n                    arr.push(a);\r\n                });\r\n                // res.send(data);\r\n                let buffer = xlsx.build([{name: \"mySheetName\", data: arr}]); // Returns a buffer\r\n                res.end(buffer.toString('base64'));\r\n            });\r\n        else res.send(\"Неверный данные пользователя\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\napp.post('/getAllUsers', (req, res) => {\r\n    console.log('/getAllUsers');\r\n    console.log(req.body);\r\n    userDB.findByIDAndPass(req.body).then(data => {\r\n        if (data.length != 0 && data[0].role==\"admin\")\r\n            userDB.getAll().then(data => {\r\n                console.log(data);\r\n                res.send( data);\r\n            });\r\n        else res.send(\"Неверный данные пользователя\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\n\r\napp.post('/changeTaskStatus', (req, res) => {\r\n    let userinfo={pass:req.body.pass, _id:req.body.userID};\r\n    userDB.findByIDAndPass(userinfo).then(data => {\r\n        if (data.length != 0)\r\n            noteDB.findByID(req.body).then(data => {\r\n                // console.log(data[0]);\r\n                if(data[0].userID==req.body.userID){\r\n                noteDB.changeStatus(data[0]).then(data => {\r\n                    noteDB.findByUserID(req.body).then(data => {\r\n                        // console.log(data);\r\n                        res.send( data);\r\n                    });})}\r\n                    else res.send( \"Попытка неверно передать информацию\");\r\n            });\r\n        else res.send(\"Неверный данные пользователя\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\napp.post('/removeTask', (req, res) => {\r\n    let userinfo={pass:req.body.pass, _id:req.body.userID};\r\n    userDB.findByIDAndPass(userinfo).then(data => {\r\n        if (data.length != 0)\r\n            noteDB.findByID(req.body).then(data => {\r\n                console.log(data[0]);\r\n                if(data[0].userID==req.body.userID){\r\n                    noteDB.deleteNote(data[0]).then(data => {\r\n                        noteDB.findByUserID(req.body).then(data => {\r\n                            console.log(data);\r\n                            res.send( data);\r\n                        });})}\r\n                else res.send( \"Попытка неверно передать информацию\");\r\n            });\r\n        else res.send(\"Неверный данные пользователя\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\n\r\napp.post('/sendInsructions', function (req, res) {\r\n    userDB.findByEmail(req.body).then((data) => {\r\n        if (data.length == 0||data[0].Auth!=undefined) {\r\n            res.send(false);\r\n        } else {\r\n            forgotPassDB.removeByEmail(req.body).then(() => {\r\n                forgotPassDB.createForgotPass(req.body).then((data) => {\r\n                        console.log(data);\r\n                        let id = data._id;\r\n                        let mailOptions = {\r\n                            from: '\"R-key\" <5600t0@gmail.com>', // sender address\r\n                            to: '' + req.body.email, // list of receivers\r\n                            subject: 'Hello ✔', // Subject line\r\n                            email: 'Hello world ?', // plain email body\r\n                            html: '<div><div><b>Если вы хотите изметь ваш пароль, то пройдите по ссылке внизу</b></div>' +\r\n                            '<div><a href=\"http://localhost:8090/restorePass?id=' +\r\n                            id +\r\n                            '\">Ссылка</a></div></div> ' // html body\r\n                        };\r\n\r\n// send mail with defined transport object\r\n                        transporter.sendMail(mailOptions, (error, info) => {\r\n                            if (error) {\r\n                                res.send(false);\r\n                                console.log(error);\r\n                            }\r\n                            console.log('Message %s sent: %s', info.messageId, info.response);\r\n                            res.send(true);\r\n\r\n                        });\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    })\r\n\r\n});\r\n\r\napp.post('/reg', (req, res) => {\r\n    console.log(req.body);\r\n    userDB.findByEmail(req.body).then(data => {\r\n        if (data.length == 0)\r\n            userDB.createUser(req.body).then(data => {\r\n                console.log(data);\r\n                let token = getToken(data);\r\n                res.send({user: data, token: token});\r\n            });\r\n        else res.send(\"Данный email уже зарегестрирован\")\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n\r\n});\r\n\r\napp.post('/changeImage', (req, res) => {\r\n    console.log(req.body);\r\n    userDB.findByID(req.body).then(data => {\r\n        if (data.length == 0) {\r\n            res.send(\"Неверный ID пользователя\");\r\n        }\r\n        else {\r\n            // onCheck.log(data[0],req.body.newPass);\r\n            userDB.restoreImage(data[0], req.body).then((data) => {\r\n                // onCheck.log({information:\"Успешно изменён пароль\",user:data,token:getToken(data)});\r\n                res.send({information: \"Успешно изменён аватар\", user: data, token: getToken(data)});\r\n            }).catch(err => console.log(err))\r\n        }\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\napp.post('/changePass', (req, res) => {\r\n    console.log(req.body);\r\n    userDB.findByIDAndPass(req.body).then(data => {\r\n        if (data.length == 0) {\r\n            res.send(\"Неверный пароль\");\r\n        }\r\n        else {\r\n            console.log(data[0], req.body.newPass);\r\n            userDB.restorePass(data[0], req.body.newPass).then((data) => {\r\n                // onCheck.log({information:\"Успешно изменён пароль\",user:data,token:getToken(data)});\r\n                res.send({information: \"Успешно изменён пароль\", user: data, token: getToken(data)});\r\n            }).catch(err => console.log(err))\r\n        }\r\n    }).catch((error) => {\r\n        res.send(\"Ошибка обработки сервера!\");\r\n    });\r\n});\r\n\r\napp.post('/changeEmail', (req, res) => {\r\n    console.log(req.body);\r\n    userDB.findByEmail(req.body).then(data => {\r\n        if (data.length == 0) {\r\n            userDB.findByIDAndPass(req.body).then(data => {\r\n                if (data.length == 0) {\r\n                    res.send(\"Неверный пароль\");\r\n                }\r\n                else {\r\n                    userDB.restoreEmail(data[0], req.body.email).then(data => {\r\n                        // onCheck.log({information:\"Успешно изменён email\",user:data,token:getToken(data)});\r\n                        res.send({information: \"Успешно изменён email\", user: data, token: getToken(data)});\r\n                    })\r\n                }\r\n            }).catch((error) => {\r\n                res.send(\"Ошибка обработки сервера!\");\r\n            });\r\n        }\r\n        else res.send(\"Ошибка - данный email уже есть в базе данных\")\r\n    });\r\n\r\n});\r\n\r\napp.post('/login', (req, res) => {\r\n    userDB.findByEmailAndPass(req.body).then((data) => {\r\n        // console.log((req.body.OAuth==data[0].OAuth));\r\n        // console.log(data[0]);\r\n        if (data.length != 0&&((req.body.OAuth==undefined &&data[0].OAuth==undefined)||req.body.OAuth==data[0].OAuth)) {\r\n            // onCheck.log(req.body);\r\n            console.log(data[0].email);\r\n            let token = getToken(data[0]);\r\n            jwt.verify(token, 'superSecret', function (err, decoded) {\r\n                if (err) {\r\n                    console.log(err);\r\n                } else {\r\n                    console.log(decoded);\r\n                }\r\n            });\r\n            console.log(\"all ok\");\r\n            res.send({token: token, user: data[0]});\r\n        }\r\n        else {\r\n            console.log(req.body);\r\n            res.send(\"Ошибка ввода: Неверный email/пароль\");\r\n        }\r\n    });\r\n\r\n});\r\n\r\napp.get('/dashboard', (req, res) => {\r\n    res.send();\r\n});\r\n\r\napp.get('/restorePass', (req, res) => {\r\n    console.log(req.query.id);\r\n    function date_diff_indays(date1) {\r\n        let dt1 = new Date(date1);\r\n        let dt2 = new Date();\r\n        return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate()) ) / (1000 * 60 * 60 * 24));\r\n    };\r\n\r\n    forgotPassDB.findById(req.query.id).then((data) => {\r\n        console.log(data);\r\n        if (data.length == 0 || date_diff_indays(data[0].date) > 2) {\r\n            res.send(false);\r\n        }\r\n        res.send(true);\r\n    }).catch((error) => {\r\n        res.send(false);\r\n    });\r\n});\r\n\r\napp.post('/restorePass', (req, res) => {\r\n    let email;\r\n    forgotPassDB.findById(req.query.id).then((data) => {\r\n        email = data[0].email;\r\n        console.log(data);\r\n        console.log(email);\r\n        userDB.findByEmail({email: email}).then(data => {\r\n            console.log(data[0]);\r\n            console.log(req.body);\r\n            userDB.restorePass(data[0], req.body.pass).then(date => {\r\n                forgotPassDB.removeByEmail({email: email}).then(date => {\r\n                    res.send(true);\r\n                })\r\n            })\r\n        })\r\n    }).catch((error) => {\r\n            res.send(false);\r\n        }\r\n    );\r\n\r\n});\r\n\r\n\r\nconst server = app.listen(8080, () => {\r\n    console.log(`Server is up and running on port 8080`);\r\n});"]}