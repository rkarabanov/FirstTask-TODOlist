{"version":3,"sources":["../../server/app.js"],"names":[],"mappings":";;;;;;uBAAoB,SAAS;;;;0BACN,aAAa;;;;oBACnB,MAAM;;;;gCACC,qBAAqB;;IAAjC,MAAM;;sCACY,2BAA2B;;IAA7C,YAAY;;6CACD,oCAAoC;;IAA/C,KAAK;;AAKjB,IAAM,GAAG,GAAG,2BAAS,CAAC;AACtB,IAAM,UAAU,GAAI,OAAO,CAAC,YAAY,CAAC,CAAC;;AAE1C,IAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;AAC3C,WAAO,EAAE,OAAO;AAChB,QAAI,EAAE;AACF,YAAI,EAAE,kBAAkB;AACxB,YAAI,EAAE,iBAAiB;KAC1B;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,eAAe,EAAE,CAAC;;AAEzB,IAAI,YAAY,GAAC,IAAI,CAAC;;AAEtB,IAAI,OAAO,YAAY,KAAK,WAAW,IAAI,YAAY,KAAK,IAAI,EAAE;AAC9D,QAAI,YAAY,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,YAAY,CAAC;AAC7D,gBAAY,GAAG,IAAI,YAAY,CAAC,WAAW,CAAC,CAAC;CAChD;;AAED,GAAG,CAAC,GAAG,CAAC,wBAAW,IAAI,EAAE,CAAC,CAAC;;AAE3B,GAAG,CAAC,GAAG,CAAC,uBAAK,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC,CAAC;;AAG7B,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACxB,OAAG,CAAC,IAAI,EAAE,CAAC;CAClB,CAAC,CAAC;;AAEH,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAC7C,UAAM,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAG;AACtC,YAAG,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;AACd,eAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrB,MAAI;AACL,wBAAY,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAI;AAC1C,4BAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAC9C;AACI,2BAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClB,wBAAI,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC;AAChB,wBAAI,WAAW,GAAG;AACd,4BAAI,EAAE,4BAA4B;AAClC,0BAAE,EAAE,EAAE,GAAC,GAAG,CAAC,IAAI,CAAC,KAAK;AACrB,+BAAO,EAAE,SAAS;AAClB,4BAAI,EAAE,eAAe;AACrB,4BAAI,EAAE,0EAA0E,GAChF,gDAAgD,GAChD,EAAE,GACF,qBAAqB;qBACxB,CAAC;;;AAGF,+BAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,KAAK,EAAE,IAAI,EAAK;AAC/C,4BAAI,KAAK,EAAE;;AAEP,+BAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClB,mCAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;yBAC7B;AACD,+BAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClE,2BAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;qBAEvB,CAAC,CAAC;iBACN,CACJ,CAAC;aACL,CAAC,CAAC;SACN;KAAC,CAAC,CAAA;CAEN,CAAC,CAAC;;AAEH,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAC7B,QAAG,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;AAAC,WAAG,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAA;KAAC;AACxF,UAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI,EAAK;AACjC,YAAG,IAAI,CAAC,MAAM,IAAE,CAAC,EAAC;AACd,wBAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,mBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtB,eAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACrB,MACG;AACA,mBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtB,eAAG,CAAC,IAAI,CAAC,qCAAqC,CAC7C,CAAC;SAAC;KACN,CAAC,CAAC;CAEV,CAAC,CAAC;;AAEH,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAC,UAAC,GAAG,EAAC,GAAG,EAAG;AACnC,WAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtB,OAAG,CAAC,IAAI,CAAC,qCAAqC,CAAC,CAAC;CACnD,CAAC,CAAC;;AAEH,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AAChC,OAAG,CAAC,IAAI,EAAE,CAAC;CACd,CAAC,CAAC;;AAGH,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,YAAM;AAClC,WAAO,CAAC,GAAG,yCAAyC,CAAC;CACxD,CAAC,CAAC","file":"app.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport * as userDB from './utils/UserDBUtils';\r\nimport * as forgotPassDB from './utils/ForgotPassDBUtils';\r\nimport * as valid from '../client_my/validation/Validation';\r\n\r\n\r\n\r\n\r\nconst app = express();\r\nconst nodemailer  = require('nodemailer');\r\n\r\nconst transporter = nodemailer.createTransport({\r\n    service: 'gmail',\r\n    auth: {\r\n        user: '5600t0@gmail.com',\r\n        pass: '3455961536263Rk'\r\n    }\r\n});\r\n\r\nuserDB.setUpConnection();\r\n\r\nlet localStorage=null;\r\n\r\nif (typeof localStorage === \"undefined\" || localStorage === null) {\r\n    let LocalStorage = require('node-localstorage').LocalStorage;\r\n    localStorage = new LocalStorage('./scratch');\r\n}\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.use(cors({origin: \"*\"}));\r\n\r\n\r\napp.get('/login', (req, res) => {\r\n        res.send();\r\n});\r\n\r\napp.post('/sendInsructions', function (req, res) {\r\n    userDB.findByEmail(req.body).then((data)=>{\r\n        if(data.length==0){\r\n            res.send(\"error\");\r\n        }else{\r\n        forgotPassDB.removeByEmail(req.body).then(()=>{\r\n            forgotPassDB.createForgotPass(req.body).then((data)=>\r\n                {\r\n                    console.log(data);\r\n                    let id=data._id;\r\n                    let mailOptions = {\r\n                        from: '\"R-key\" <5600t0@gmail.com>', // sender address\r\n                        to: ''+req.body.email, // list of receivers\r\n                        subject: 'Hello ✔', // Subject line\r\n                        text: 'Hello world ?', // plain text body\r\n                        html: '<div><b>Если вы хотите изметь ваш парль, то пройдите по ссылке внизу</b>' +\r\n                        '<a href=\"http://localhost:8090/restorePass?id=' +\r\n                        id +\r\n                        '\">Ссылка</a></div> ' // html body\r\n                    };\r\n\r\n// send mail with defined transport object\r\n                    transporter.sendMail(mailOptions, (error, info) => {\r\n                        if (error) {\r\n\r\n                            res.send(\"error\");\r\n                            return console.log(error);\r\n                        }\r\n                        console.log('Message %s sent: %s', info.messageId, info.response);\r\n                        res.send('success');\r\n\r\n                    });\r\n                }\r\n            );\r\n        });\r\n    }})\r\n\r\n});\r\n\r\napp.post('/login', (req, res) => {\r\n    if(!valid.isValidateEmail(req.body.email)){res.send(\"Ошибка ввода: Некорректный email\")}\r\n    userDB.find(req.body).then((data) => {\r\n        if(data.length!=0){\r\n            localStorage.setItem('userInSystem', data[0]);\r\n            console.log(req.body);\r\n            res.send(data[0]);\r\n        }\r\n        else{\r\n            console.log(req.body);\r\n            res.send(\"Ошибка ввода: Неверной email/пароль\"\r\n            );}\r\n        });\r\n\r\n});\r\n\r\napp.post('/sendInsructions',(req,res)=>{\r\n    console.log(req.body);\r\n    res.send(\"Ошибка ввода: Неверной email/пароль\");\r\n});\r\n\r\napp.get('/dashboard', (req, res) => {\r\n    res.send();\r\n});\r\n\r\n\r\nconst server = app.listen(8080, () => {\r\n    console.log(`Server is up and running on port 8080`);\r\n});"]}